import org.jetbrains.kotlin.gradle.plugin.mpp.KotlinNativeTarget

buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.72'
        // classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.0-rc'
    }
}

repositories {
    mavenCentral()
}

apply plugin: 'org.jetbrains.kotlin.multiplatform'

kotlin {
    def hostOs = System.getProperty('os.name')
    if (hostOs == 'Mac OS X') {
        macosX64()
    }

    targets.withType(KotlinNativeTarget.class) {
        sourceSets["${targetName}Main"].kotlin.srcDir('src/flappyMain/kotlin')

        binaries {
            executable {
                entryPoint 'flappy.main'

                if (preset == presets.macosX64) {
                    linkerOpts '-L/opt/local/lib', '-L/usr/local/lib', '-lSDL2', '-lSDL2_image', '-lSDL2_gfx'
                }

                String distTaskName = linkTaskName.replaceFirst('link', 'dist')
                def distTask = tasks.register(distTaskName, Copy) {
                    from 'src/flappyMain/resources'
                    into linkTask.outputFile.get().parentFile
                    exclude '*.rc'
                    dependsOn linkTask
                }

                tasks['assemble'].dependsOn(distTask)
                if (runTask != null) {
                    runTask.workingDir(project.provider { outputDirectory })
                }
            }
        }

        compilations.main.cinterops {
            sdl {
                if (preset == presets.macosX64) {
                    includeDirs '/opt/local/include/SDL2', '/usr/local/include/SDL2'
                }
            }
        }
    }
}